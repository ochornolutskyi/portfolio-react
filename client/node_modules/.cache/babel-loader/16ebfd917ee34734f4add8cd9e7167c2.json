{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/portfolio-react/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Employee from \"./components/Employee/Employee\";\nimport EmployeeError from \"./components/EmployeeError/EmployeeError\";\nimport ProjectReview from \"./components/ProjectReview/ProjectReview\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employee: null,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api/*\", {\n      method: \"GET\"\n    }).then(response => {\n      if (response.ok) {\n        return response.clone().json();\n      }\n    }).then(result => {\n      this.setState({\n        employee: result,\n        isLoading: false\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, \"LOADING\") : /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }\n    }, !this.state.employee && /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(EmployeeError, {\n        employee: this.state.employee,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }\n    }), this.state.employee && /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Employee, {\n        employee: this.state.employee,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 45\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/:title\",\n      render: props => /*#__PURE__*/React.createElement(ProjectReview, Object.assign({}, props, {\n        employee: employee,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 31\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/superproger/workspace/portfolio-react/client/src/App.js"],"names":["React","Component","Switch","Route","BrowserRouter","Router","Employee","EmployeeError","ProjectReview","App","constructor","props","state","employee","isLoading","componentDidMount","fetch","method","then","response","ok","clone","json","result","setState","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAa,IAAIC,MAAzC,QAAuD,kBAAvD;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACzBS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,QAAQ,EAAE,IADA;AAEVC,MAAAA,SAAS,EAAE;AAFD,KAAb;AAIF;;AAEDC,EAAAA,iBAAiB,GAAG;AACjBC,IAAAA,KAAK,CAAC,QAAD,EAAW;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAX,CAAL,CACIC,IADJ,CACUC,QAAD,IAAc;AACjB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACd,eAAOD,QAAQ,CAACE,KAAT,GAAiBC,IAAjB,EAAP;AACF;AACH,KALJ,EAMIJ,IANJ,CAMUK,MAAD,IAAY;AACf,WAAKC,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAEU,MAAZ;AAAoBT,QAAAA,SAAS,EAAE;AAA/B,OAAd;AACF,KARJ,EASIW,KATJ,CASWC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATnB;AAUF;;AAEDG,EAAAA,MAAM,GAAG;AAEN,wBACG;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKjB,KAAL,CAAWE,SAAX,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,gBAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,CAAC,KAAKF,KAAL,CAAWC,QAAZ,iBACE,oBAAC,KAAD;AACG,MAAA,KAAK,MADR;AAEG,MAAA,IAAI,EAAC,GAFR;AAGG,MAAA,MAAM,EAAE,mBACL,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,EAUI,KAAKD,KAAL,CAAWC,QAAX,iBACE,oBAAC,KAAD;AACG,MAAA,KAAK,MADR;AAEG,MAAA,IAAI,EAAC,GAFR;AAGG,MAAA,MAAM,EAAE,mBAAM,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXN,CADH,eAoBG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AACG,MAAA,KAAK,MADR;AAEG,MAAA,IAAI,EAAC,SAFR;AAGG,MAAA,MAAM,EAAGF,KAAD,iBACL,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,QAAA,QAAQ,EAAEE,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CApBH,CAJN,CADH,CADH;AAwCF;;AAhEwB;;AAmE5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Employee from \"./components/Employee/Employee\";\nimport EmployeeError from \"./components/EmployeeError/EmployeeError\";\nimport ProjectReview from \"./components/ProjectReview/ProjectReview\";\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         employee: null,\n         isLoading: true,\n      };\n   }\n\n   componentDidMount() {\n      fetch(\"/api/*\", { method: \"GET\" })\n         .then((response) => {\n            if (response.ok) {\n               return response.clone().json();\n            }\n         })\n         .then((result) => {\n            this.setState({ employee: result, isLoading: false });\n         })\n         .catch((err) => console.log(err));\n   }\n\n   render() {\n\n      return (\n         <div className=\"App\">\n            <div className=\"content\">\n               {this.state.isLoading ? (\n                  <h1>LOADING</h1>\n               ) : (\n                  <Router>\n                     <Switch>\n                        {!this.state.employee && (\n                           <Route\n                              exact\n                              path=\"/\"\n                              render={() => (\n                                 <EmployeeError employee={this.state.employee} />\n                              )}\n                           />\n                        )}\n                        {this.state.employee && (\n                           <Route\n                              exact\n                              path=\"/\"\n                              render={() => <Employee employee={this.state.employee} />}\n                           />\n                        )}\n                     </Switch>\n\n                     <Switch>\n                        <Route\n                           exact\n                           path=\"/:title\"\n                           render={(props) => (\n                              <ProjectReview {...props} employee={employee} />\n                           )}\n                        />\n                     </Switch>\n                  </Router>\n               )}\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}