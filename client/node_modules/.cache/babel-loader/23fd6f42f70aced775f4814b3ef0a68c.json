{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/portfolio-react/client/src/components/Employee/Employee.js\";\nimport React, { Component } from \"react\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\nimport Arrow from \"../Arrow/Arrow\";\n\nclass RenderEmployee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRender: false,\n      scrollHeight: 0,\n      arrow: {\n        disableClickHandler: false,\n        isRender: false,\n        style: {\n          opacity: 0\n        },\n        animationSidesStyle: {\n          right: 23,\n          deg: 45\n        },\n        animationCenterStyle: {\n          right: 0,\n          deg: 0\n        }\n      }\n    };\n\n    this.checkArrowRendering = () => {\n      const scrollHeight = window.scrollY;\n      const clientHeight = document.documentElement.clientHeight;\n      let isRender = this.state.arrow.isRender;\n      let style = { ...this.state.arrow.style\n      };\n      let animationSidesStyle = { ...this.state.arrow.animationSidesStyle\n      };\n      let animationCenterStyle = { ...this.state.arrow.animationCenterStyle\n      };\n\n      if (scrollHeight > clientHeight * 2) {\n        isRender = true;\n        style.opacity = 1;\n        this.setState({\n          arrow: {\n            isRender,\n            style,\n            animationSidesStyle,\n            animationCenterStyle\n          }\n        });\n      }\n    };\n\n    this.scrollHandler = () => {\n      let isRender = this.state.arrow.isRender;\n      let style = { ...this.state.arrow.style\n      };\n      let animationSidesStyle = { ...this.state.arrow.animationSidesStyle\n      };\n      let animationCenterStyle = { ...this.state.arrow.animationCenterStyle\n      };\n      const scrollHeight = window.scrollY;\n      const clientHeight = document.documentElement.clientHeight;\n      this.setState({\n        scrollHeight\n      });\n\n      if (scrollHeight > clientHeight && style.opacity < 1) {\n        isRender = true;\n        style.opacity += 0.04;\n        this.setState({\n          arrow: {\n            isRender,\n            style,\n            animationSidesStyle,\n            animationCenterStyle\n          }\n        });\n      } else if (scrollHeight < clientHeight && style.opacity > 0) {\n        style.opacity -= 0.1;\n        this.setState({\n          arrow: {\n            isRender,\n            style,\n            animationSidesStyle,\n            animationCenterStyle\n          }\n        });\n      }\n\n      if (style.opacity <= 0) {\n        isRender = false;\n        this.setState({\n          arrow: {\n            isRender,\n            style,\n            animationSidesStyle,\n            animationCenterStyle\n          }\n        });\n      }\n    };\n\n    this.arrowClickHandler = () => {\n      let arrow = { ...this.state.arrow\n      };\n\n      if (!arrow.disableClickHandler) {\n        this.arrowAnimation();\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      } //disabling click handler while animates\n\n\n      arrow.disableClickHandler = true;\n      this.setState({\n        arrow\n      });\n    }; //arrow parts animation\n\n\n    this.moveSides = (moveStep, resolve) => {\n      // return new Promise((resolve, reject) => {\n      let arrow = { ...this.state.arrow\n      };\n\n      if (moveStep > -27) {\n        moveStep -= 0.5;\n        arrow.animationSidesStyle.right = moveStep;\n        this.setState({\n          arrow\n        });\n        setTimeout(() => {\n          return this.moveSides(moveStep, resolve);\n        }, 4);\n      } else {\n        resolve();\n      } // });\n\n    };\n\n    this.moveCenterUp = (moveStep, resolve) => {\n      let arrow = { ...this.state.arrow\n      };\n\n      if (moveStep < 16) {\n        moveStep += 0.5;\n        arrow.animationCenterStyle.right = moveStep;\n        this.setState({\n          arrow\n        });\n        setTimeout(() => {\n          return this.moveCenterUp(moveStep, resolve);\n        }, 4);\n      } else {\n        resolve();\n      }\n    };\n\n    this.moveCenterDown = (moveStep, resolve) => {\n      let arrow = { ...this.state.arrow\n      };\n\n      if (moveStep > -55) {\n        moveStep -= 0.6;\n        arrow.animationCenterStyle.right = moveStep;\n        this.setState({\n          arrow\n        });\n        setTimeout(() => {\n          return this.moveCenterDown(moveStep, resolve);\n        }, 4);\n      } else {\n        resolve();\n      }\n    }; //TODO: choose a type of animation\n\n\n    this.rotating = (deg, resolve) => {\n      // return new Promise((resolve, reject) => {\n      let arrow = { ...this.state.arrow\n      };\n\n      if (deg < 225 && arrow.animationSidesStyle.deg !== 135) {\n        deg += 1; // arrow.animationCenterStyle.deg = deg - 45;\n\n        arrow.animationSidesStyle.deg = deg;\n        this.setState({\n          arrow\n        });\n        setTimeout(() => {\n          return this.rotating(deg, resolve);\n        }, 4);\n      } else {\n        /* else if (deg < 225) {\n           deg += 2;\n           arrow.animationCenterStyle.deg = deg - 45;\n           this.setState({\n              arrow,\n           });\n           setTimeout(() => {\n              return this.rotating(deg, resolve);\n           }, 4);  \n        }*/\n        resolve();\n      } // });\n\n    };\n\n    this.arrowAnimation = () => {\n      //disabling scroll hadler\n      window.removeEventListener(\"scroll\", this.scrollHandler); //move sides\n\n      const moveSides = new Promise((resolve, reject) => {\n        this.moveSides(this.state.arrow.animationSidesStyle.right, resolve);\n      }); //moves a center part of the arrow to up and then to down  to get out of the page\n\n      const moveCenter = new Promise((resolve, reject) => {\n        const moveCenterUp = new Promise((resolve, reject) => {\n          this.moveCenterUp(this.state.arrow.animationCenterStyle.right, resolve);\n        });\n        moveCenterUp.then(() => this.moveCenterDown(this.state.arrow.animationCenterStyle.right, resolve));\n      }); //rotating\n\n      const rotating = new Promise((resolve, reject) => {\n        this.rotating(this.state.arrow.animationSidesStyle.deg, resolve);\n      }); //remove the arrow after the end of the animation\n\n      Promise.all([moveSides, moveCenter, rotating]).then(this.animationArrowEnded);\n    };\n\n    this.animationArrowEnded = () => {\n      let arrow = { ...this.state.arrow\n      };\n      arrow.isRender = false;\n      arrow.animationSidesStyle.right = 23;\n      arrow.animationSidesStyle.deg = 45;\n      arrow.animationCenterStyle.right = 0;\n      arrow.animationCenterStyle.deg = 0;\n      this.setState({\n        arrow\n      }); //add scroll handler after arrow removed\n\n      this.checkArrowRendering();\n      window.addEventListener(\"scroll\", this.scrollHandler);\n    };\n  }\n\n  componentDidMount() {\n    this.checkArrowRendering();\n    window.addEventListener(\"scroll\", this.scrollHandler);\n  }\n\n  componentWillReceiveProps() {\n    // console.log(this.props)\n    this.setState({\n      isRender: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      employeeInfo: this.props.employee.info,\n      projectsList: this.props.employee.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      projectsList: this.props.employee.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }), this.state.arrow.isRender ? /*#__PURE__*/React.createElement(Arrow, {\n      arrowStyle: this.state.arrow.style,\n      animationSidesStyle: this.state.arrow.animationSidesStyle,\n      rotatingSidesDeg: this.state.arrow.animationSidesStyle.deg,\n      animationCenterStyle: this.state.arrow.animationCenterStyle,\n      rotatingCenterDeg: this.state.arrow.animationCenterStyle.deg,\n      arrowId: \"ToTop\",\n      type: \"toTop\",\n      arrowClickHandler: this.arrowClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 16\n      }\n    }) : null);\n  }\n\n}\n\nexport default RenderEmployee;","map":{"version":3,"sources":["/home/superproger/workspace/portfolio-react/client/src/components/Employee/Employee.js"],"names":["React","Component","Footer","Header","Main","Arrow","RenderEmployee","constructor","props","state","isRender","scrollHeight","arrow","disableClickHandler","style","opacity","animationSidesStyle","right","deg","animationCenterStyle","checkArrowRendering","window","scrollY","clientHeight","document","documentElement","setState","scrollHandler","arrowClickHandler","arrowAnimation","scrollTo","top","behavior","moveSides","moveStep","resolve","setTimeout","moveCenterUp","moveCenterDown","rotating","removeEventListener","Promise","reject","moveCenter","then","all","animationArrowEnded","addEventListener","componentDidMount","componentWillReceiveProps","render","employee","info","projects"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,QAAQ,EAAE,KADA;AAEVC,MAAAA,YAAY,EAAE,CAFJ;AAGVC,MAAAA,KAAK,EAAE;AACJC,QAAAA,mBAAmB,EAAE,KADjB;AAEJH,QAAAA,QAAQ,EAAE,KAFN;AAGJI,QAAAA,KAAK,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL,SAHH;AAMJC,QAAAA,mBAAmB,EAAE;AAClBC,UAAAA,KAAK,EAAE,EADW;AAElBC,UAAAA,GAAG,EAAE;AAFa,SANjB;AAUJC,QAAAA,oBAAoB,EAAE;AACnBF,UAAAA,KAAK,EAAE,CADY;AAEnBC,UAAAA,GAAG,EAAE;AAFc;AAVlB;AAHG,KAAb;;AAmBA,SAAKE,mBAAL,GAA2B,MAAM;AAC9B,YAAMT,YAAY,GAAGU,MAAM,CAACC,OAA5B;AACA,YAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAA9C;AACA,UAAIb,QAAQ,GAAG,KAAKD,KAAL,CAAWG,KAAX,CAAiBF,QAAhC;AACA,UAAII,KAAK,GAAG,EAAE,GAAG,KAAKL,KAAL,CAAWG,KAAX,CAAiBE;AAAtB,OAAZ;AACA,UAAIE,mBAAmB,GAAG,EAAE,GAAG,KAAKP,KAAL,CAAWG,KAAX,CAAiBI;AAAtB,OAA1B;AACA,UAAIG,oBAAoB,GAAG,EACxB,GAAG,KAAKV,KAAL,CAAWG,KAAX,CAAiBO;AADI,OAA3B;;AAGA,UAAIR,YAAY,GAAGY,YAAY,GAAG,CAAlC,EAAqC;AAClCb,QAAAA,QAAQ,GAAG,IAAX;AACAI,QAAAA,KAAK,CAACC,OAAN,GAAgB,CAAhB;AACA,aAAKW,QAAL,CAAc;AACXd,UAAAA,KAAK,EAAE;AACJF,YAAAA,QADI;AAEJI,YAAAA,KAFI;AAGJE,YAAAA,mBAHI;AAIJG,YAAAA;AAJI;AADI,SAAd;AAQF;AACH,KArBD;;AAsBA,SAAKQ,aAAL,GAAqB,MAAM;AACxB,UAAIjB,QAAQ,GAAG,KAAKD,KAAL,CAAWG,KAAX,CAAiBF,QAAhC;AACA,UAAII,KAAK,GAAG,EAAE,GAAG,KAAKL,KAAL,CAAWG,KAAX,CAAiBE;AAAtB,OAAZ;AACA,UAAIE,mBAAmB,GAAG,EAAE,GAAG,KAAKP,KAAL,CAAWG,KAAX,CAAiBI;AAAtB,OAA1B;AACA,UAAIG,oBAAoB,GAAG,EACxB,GAAG,KAAKV,KAAL,CAAWG,KAAX,CAAiBO;AADI,OAA3B;AAGA,YAAMR,YAAY,GAAGU,MAAM,CAACC,OAA5B;AACA,YAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAA9C;AACA,WAAKG,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;;AACA,UAAIA,YAAY,GAAGY,YAAf,IAA+BT,KAAK,CAACC,OAAN,GAAgB,CAAnD,EAAsD;AACnDL,QAAAA,QAAQ,GAAG,IAAX;AACAI,QAAAA,KAAK,CAACC,OAAN,IAAiB,IAAjB;AACA,aAAKW,QAAL,CAAc;AACXd,UAAAA,KAAK,EAAE;AACJF,YAAAA,QADI;AAEJI,YAAAA,KAFI;AAGJE,YAAAA,mBAHI;AAIJG,YAAAA;AAJI;AADI,SAAd;AAQF,OAXD,MAWO,IAAIR,YAAY,GAAGY,YAAf,IAA+BT,KAAK,CAACC,OAAN,GAAgB,CAAnD,EAAsD;AAC1DD,QAAAA,KAAK,CAACC,OAAN,IAAiB,GAAjB;AACA,aAAKW,QAAL,CAAc;AACXd,UAAAA,KAAK,EAAE;AACJF,YAAAA,QADI;AAEJI,YAAAA,KAFI;AAGJE,YAAAA,mBAHI;AAIJG,YAAAA;AAJI;AADI,SAAd;AAQF;;AACD,UAAIL,KAAK,CAACC,OAAN,IAAiB,CAArB,EAAwB;AACrBL,QAAAA,QAAQ,GAAG,KAAX;AACA,aAAKgB,QAAL,CAAc;AACXd,UAAAA,KAAK,EAAE;AACJF,YAAAA,QADI;AAEJI,YAAAA,KAFI;AAGJE,YAAAA,mBAHI;AAIJG,YAAAA;AAJI;AADI,SAAd;AAQF;AACH,KA3CD;;AA4CA,SAAKS,iBAAL,GAAyB,MAAM;AAC5B,UAAIhB,KAAK,GAAG,EAAE,GAAG,KAAKH,KAAL,CAAWG;AAAhB,OAAZ;;AACA,UAAI,CAACA,KAAK,CAACC,mBAAX,EAAgC;AAC7B,aAAKgB,cAAL;AACAR,QAAAA,MAAM,CAACS,QAAP,CAAgB;AACbC,UAAAA,GAAG,EAAE,CADQ;AAEbC,UAAAA,QAAQ,EAAE;AAFG,SAAhB;AAIF,OAR2B,CAS5B;;;AACApB,MAAAA,KAAK,CAACC,mBAAN,GAA4B,IAA5B;AACA,WAAKa,QAAL,CAAc;AACXd,QAAAA;AADW,OAAd;AAGF,KAdD,CAvFgB,CAsGhB;;;AACA,SAAKqB,SAAL,GAAiB,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACrC;AACA,UAAIvB,KAAK,GAAG,EAAE,GAAG,KAAKH,KAAL,CAAWG;AAAhB,OAAZ;;AACA,UAAIsB,QAAQ,GAAG,CAAC,EAAhB,EAAoB;AACjBA,QAAAA,QAAQ,IAAI,GAAZ;AACAtB,QAAAA,KAAK,CAACI,mBAAN,CAA0BC,KAA1B,GAAkCiB,QAAlC;AACA,aAAKR,QAAL,CAAc;AACXd,UAAAA;AADW,SAAd;AAGAwB,QAAAA,UAAU,CAAC,MAAM;AACd,iBAAO,KAAKH,SAAL,CAAeC,QAAf,EAAyBC,OAAzB,CAAP;AACF,SAFS,EAEP,CAFO,CAAV;AAGF,OATD,MASO;AACJA,QAAAA,OAAO;AACT,OAdoC,CAerC;;AACF,KAhBD;;AAiBA,SAAKE,YAAL,GAAoB,CAACH,QAAD,EAAWC,OAAX,KAAuB;AACxC,UAAIvB,KAAK,GAAG,EAAE,GAAG,KAAKH,KAAL,CAAWG;AAAhB,OAAZ;;AACA,UAAIsB,QAAQ,GAAG,EAAf,EAAmB;AAChBA,QAAAA,QAAQ,IAAI,GAAZ;AACAtB,QAAAA,KAAK,CAACO,oBAAN,CAA2BF,KAA3B,GAAmCiB,QAAnC;AACA,aAAKR,QAAL,CAAc;AACXd,UAAAA;AADW,SAAd;AAGAwB,QAAAA,UAAU,CAAC,MAAM;AACd,iBAAO,KAAKC,YAAL,CAAkBH,QAAlB,EAA4BC,OAA5B,CAAP;AACF,SAFS,EAEP,CAFO,CAAV;AAGF,OATD,MASO;AACJA,QAAAA,OAAO;AACT;AACH,KAdD;;AAeA,SAAKG,cAAL,GAAsB,CAACJ,QAAD,EAAWC,OAAX,KAAuB;AAC1C,UAAIvB,KAAK,GAAG,EAAE,GAAG,KAAKH,KAAL,CAAWG;AAAhB,OAAZ;;AACA,UAAIsB,QAAQ,GAAG,CAAC,EAAhB,EAAoB;AACjBA,QAAAA,QAAQ,IAAI,GAAZ;AACAtB,QAAAA,KAAK,CAACO,oBAAN,CAA2BF,KAA3B,GAAmCiB,QAAnC;AACA,aAAKR,QAAL,CAAc;AACXd,UAAAA;AADW,SAAd;AAGAwB,QAAAA,UAAU,CAAC,MAAM;AACd,iBAAO,KAAKE,cAAL,CAAoBJ,QAApB,EAA8BC,OAA9B,CAAP;AACF,SAFS,EAEP,CAFO,CAAV;AAGF,OATD,MASO;AACJA,QAAAA,OAAO;AACT;AACH,KAdD,CAvIgB,CAsJhB;;;AACA,SAAKI,QAAL,GAAgB,CAACrB,GAAD,EAAMiB,OAAN,KAAkB;AAC/B;AACA,UAAIvB,KAAK,GAAG,EAAE,GAAG,KAAKH,KAAL,CAAWG;AAAhB,OAAZ;;AACA,UAAIM,GAAG,GAAG,GAAN,IAAaN,KAAK,CAACI,mBAAN,CAA0BE,GAA1B,KAAkC,GAAnD,EAAwD;AACrDA,QAAAA,GAAG,IAAI,CAAP,CADqD,CAErD;;AACAN,QAAAA,KAAK,CAACI,mBAAN,CAA0BE,GAA1B,GAAgCA,GAAhC;AACA,aAAKQ,QAAL,CAAc;AACXd,UAAAA;AADW,SAAd;AAGAwB,QAAAA,UAAU,CAAC,MAAM;AACd,iBAAO,KAAKG,QAAL,CAAcrB,GAAd,EAAmBiB,OAAnB,CAAP;AACF,SAFS,EAEP,CAFO,CAAV;AAGF,OAVD,MAUO;AACJ;;;;;;;;;;AAUAA,QAAAA,OAAO;AACT,OAzB8B,CA0B/B;;AACF,KA3BD;;AA4BA,SAAKN,cAAL,GAAsB,MAAM;AACzB;AACAR,MAAAA,MAAM,CAACmB,mBAAP,CAA2B,QAA3B,EAAqC,KAAKb,aAA1C,EAFyB,CAGzB;;AACA,YAAMM,SAAS,GAAG,IAAIQ,OAAJ,CAAY,CAACN,OAAD,EAAUO,MAAV,KAAqB;AAChD,aAAKT,SAAL,CAAe,KAAKxB,KAAL,CAAWG,KAAX,CAAiBI,mBAAjB,CAAqCC,KAApD,EAA2DkB,OAA3D;AACF,OAFiB,CAAlB,CAJyB,CAOzB;;AACA,YAAMQ,UAAU,GAAG,IAAIF,OAAJ,CAAY,CAACN,OAAD,EAAUO,MAAV,KAAqB;AACjD,cAAML,YAAY,GAAG,IAAII,OAAJ,CAAY,CAACN,OAAD,EAAUO,MAAV,KAAqB;AACnD,eAAKL,YAAL,CACG,KAAK5B,KAAL,CAAWG,KAAX,CAAiBO,oBAAjB,CAAsCF,KADzC,EAEGkB,OAFH;AAIF,SALoB,CAArB;AAMAE,QAAAA,YAAY,CAACO,IAAb,CAAkB,MACf,KAAKN,cAAL,CACG,KAAK7B,KAAL,CAAWG,KAAX,CAAiBO,oBAAjB,CAAsCF,KADzC,EAEGkB,OAFH,CADH;AAMF,OAbkB,CAAnB,CARyB,CAsBzB;;AACA,YAAMI,QAAQ,GAAG,IAAIE,OAAJ,CAAY,CAACN,OAAD,EAAUO,MAAV,KAAqB;AAC/C,aAAKH,QAAL,CAAc,KAAK9B,KAAL,CAAWG,KAAX,CAAiBI,mBAAjB,CAAqCE,GAAnD,EAAwDiB,OAAxD;AACF,OAFgB,CAAjB,CAvByB,CA0BzB;;AACAM,MAAAA,OAAO,CAACI,GAAR,CAAY,CAACZ,SAAD,EAAYU,UAAZ,EAAwBJ,QAAxB,CAAZ,EAA+CK,IAA/C,CACG,KAAKE,mBADR;AAGF,KA9BD;;AA+BA,SAAKA,mBAAL,GAA2B,MAAM;AAC9B,UAAIlC,KAAK,GAAG,EAAE,GAAG,KAAKH,KAAL,CAAWG;AAAhB,OAAZ;AACAA,MAAAA,KAAK,CAACF,QAAN,GAAiB,KAAjB;AACAE,MAAAA,KAAK,CAACI,mBAAN,CAA0BC,KAA1B,GAAkC,EAAlC;AACAL,MAAAA,KAAK,CAACI,mBAAN,CAA0BE,GAA1B,GAAgC,EAAhC;AACAN,MAAAA,KAAK,CAACO,oBAAN,CAA2BF,KAA3B,GAAmC,CAAnC;AACAL,MAAAA,KAAK,CAACO,oBAAN,CAA2BD,GAA3B,GAAiC,CAAjC;AACA,WAAKQ,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd,EAP8B,CAQ9B;;AACA,WAAKQ,mBAAL;AACAC,MAAAA,MAAM,CAAC0B,gBAAP,CAAwB,QAAxB,EAAkC,KAAKpB,aAAvC;AACF,KAXD;AAYF;;AAEDqB,EAAAA,iBAAiB,GAAG;AACjB,SAAK5B,mBAAL;AACAC,IAAAA,MAAM,CAAC0B,gBAAP,CAAwB,QAAxB,EAAkC,KAAKpB,aAAvC;AACF;;AACDsB,EAAAA,yBAAyB,GAAG;AACzB;AACA,SAAKvB,QAAL,CAAc;AAAEhB,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACF;;AAEDwC,EAAAA,MAAM,GAAG;AACN,wBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,MAAD;AACG,MAAA,YAAY,EAAE,KAAK1C,KAAL,CAAW2C,QAAX,CAAoBC,IADrC;AAEG,MAAA,YAAY,EAAE,KAAK5C,KAAL,CAAW2C,QAAX,CAAoBE,QAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAKG,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAK7C,KAAL,CAAW2C,QAAX,CAAoBE,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,eAMG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,EAOI,KAAK5C,KAAL,CAAWG,KAAX,CAAiBF,QAAjB,gBACE,oBAAC,KAAD;AACG,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWG,KAAX,CAAiBE,KADhC;AAEG,MAAA,mBAAmB,EAAE,KAAKL,KAAL,CAAWG,KAAX,CAAiBI,mBAFzC;AAGG,MAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWG,KAAX,CAAiBI,mBAAjB,CAAqCE,GAH1D;AAIG,MAAA,oBAAoB,EAAE,KAAKT,KAAL,CAAWG,KAAX,CAAiBO,oBAJ1C;AAKG,MAAA,iBAAiB,EAAE,KAAKV,KAAL,CAAWG,KAAX,CAAiBO,oBAAjB,CAAsCD,GAL5D;AAMG,MAAA,OAAO,EAAC,OANX;AAOG,MAAA,IAAI,EAAC,OAPR;AAQG,MAAA,iBAAiB,EAAE,KAAKU,iBAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAWG,IAlBP,CADH;AAsBF;;AAjQmC;;AAoQvC,eAAetB,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\nimport Arrow from \"../Arrow/Arrow\";\n\nclass RenderEmployee extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         isRender: false,\n         scrollHeight: 0,\n         arrow: {\n            disableClickHandler: false,\n            isRender: false,\n            style: {\n               opacity: 0,\n            },\n            animationSidesStyle: {\n               right: 23,\n               deg: 45,\n            },\n            animationCenterStyle: {\n               right: 0,\n               deg: 0,\n            },\n         },\n      };\n      this.checkArrowRendering = () => {\n         const scrollHeight = window.scrollY;\n         const clientHeight = document.documentElement.clientHeight;\n         let isRender = this.state.arrow.isRender;\n         let style = { ...this.state.arrow.style };\n         let animationSidesStyle = { ...this.state.arrow.animationSidesStyle };\n         let animationCenterStyle = {\n            ...this.state.arrow.animationCenterStyle,\n         };\n         if (scrollHeight > clientHeight * 2) {\n            isRender = true;\n            style.opacity = 1;\n            this.setState({\n               arrow: {\n                  isRender,\n                  style,\n                  animationSidesStyle,\n                  animationCenterStyle,\n               },\n            });\n         }\n      };\n      this.scrollHandler = () => {\n         let isRender = this.state.arrow.isRender;\n         let style = { ...this.state.arrow.style };\n         let animationSidesStyle = { ...this.state.arrow.animationSidesStyle };\n         let animationCenterStyle = {\n            ...this.state.arrow.animationCenterStyle,\n         };\n         const scrollHeight = window.scrollY;\n         const clientHeight = document.documentElement.clientHeight;\n         this.setState({ scrollHeight });\n         if (scrollHeight > clientHeight && style.opacity < 1) {\n            isRender = true;\n            style.opacity += 0.04;\n            this.setState({\n               arrow: {\n                  isRender,\n                  style,\n                  animationSidesStyle,\n                  animationCenterStyle,\n               },\n            });\n         } else if (scrollHeight < clientHeight && style.opacity > 0) {\n            style.opacity -= 0.1;\n            this.setState({\n               arrow: {\n                  isRender,\n                  style,\n                  animationSidesStyle,\n                  animationCenterStyle,\n               },\n            });\n         }\n         if (style.opacity <= 0) {\n            isRender = false;\n            this.setState({\n               arrow: {\n                  isRender,\n                  style,\n                  animationSidesStyle,\n                  animationCenterStyle,\n               },\n            });\n         }\n      };\n      this.arrowClickHandler = () => {\n         let arrow = { ...this.state.arrow };\n         if (!arrow.disableClickHandler) {\n            this.arrowAnimation();\n            window.scrollTo({\n               top: 0,\n               behavior: \"smooth\",\n            });\n         }\n         //disabling click handler while animates\n         arrow.disableClickHandler = true;\n         this.setState({\n            arrow,\n         });\n      };\n      //arrow parts animation\n      this.moveSides = (moveStep, resolve) => {\n         // return new Promise((resolve, reject) => {\n         let arrow = { ...this.state.arrow };\n         if (moveStep > -27) {\n            moveStep -= 0.5;\n            arrow.animationSidesStyle.right = moveStep;\n            this.setState({\n               arrow,\n            });\n            setTimeout(() => {\n               return this.moveSides(moveStep, resolve);\n            }, 4);\n         } else {\n            resolve();\n         }\n         // });\n      };\n      this.moveCenterUp = (moveStep, resolve) => {\n         let arrow = { ...this.state.arrow };\n         if (moveStep < 16) {\n            moveStep += 0.5;\n            arrow.animationCenterStyle.right = moveStep;\n            this.setState({\n               arrow,\n            });\n            setTimeout(() => {\n               return this.moveCenterUp(moveStep, resolve);\n            }, 4);\n         } else {\n            resolve();\n         }\n      };\n      this.moveCenterDown = (moveStep, resolve) => {\n         let arrow = { ...this.state.arrow };\n         if (moveStep > -55) {\n            moveStep -= 0.6;\n            arrow.animationCenterStyle.right = moveStep;\n            this.setState({\n               arrow,\n            });\n            setTimeout(() => {\n               return this.moveCenterDown(moveStep, resolve);\n            }, 4);\n         } else {\n            resolve();\n         }\n      };\n      //TODO: choose a type of animation\n      this.rotating = (deg, resolve) => {\n         // return new Promise((resolve, reject) => {\n         let arrow = { ...this.state.arrow };\n         if (deg < 225 && arrow.animationSidesStyle.deg !== 135) {\n            deg += 1;\n            // arrow.animationCenterStyle.deg = deg - 45;\n            arrow.animationSidesStyle.deg = deg;\n            this.setState({\n               arrow,\n            });\n            setTimeout(() => {\n               return this.rotating(deg, resolve);\n            }, 4);\n         } else {\n            /* else if (deg < 225) {\n               deg += 2;\n               arrow.animationCenterStyle.deg = deg - 45;\n               this.setState({\n                  arrow,\n               });\n               setTimeout(() => {\n                  return this.rotating(deg, resolve);\n               }, 4);  \n            }*/\n            resolve();\n         }\n         // });\n      };\n      this.arrowAnimation = () => {\n         //disabling scroll hadler\n         window.removeEventListener(\"scroll\", this.scrollHandler);\n         //move sides\n         const moveSides = new Promise((resolve, reject) => {\n            this.moveSides(this.state.arrow.animationSidesStyle.right, resolve);\n         });\n         //moves a center part of the arrow to up and then to down  to get out of the page\n         const moveCenter = new Promise((resolve, reject) => {\n            const moveCenterUp = new Promise((resolve, reject) => {\n               this.moveCenterUp(\n                  this.state.arrow.animationCenterStyle.right,\n                  resolve\n               );\n            });\n            moveCenterUp.then(() =>\n               this.moveCenterDown(\n                  this.state.arrow.animationCenterStyle.right,\n                  resolve\n               )\n            );\n         });\n         //rotating\n         const rotating = new Promise((resolve, reject) => {\n            this.rotating(this.state.arrow.animationSidesStyle.deg, resolve);\n         });\n         //remove the arrow after the end of the animation\n         Promise.all([moveSides, moveCenter, rotating]).then(\n            this.animationArrowEnded\n         );\n      };\n      this.animationArrowEnded = () => {\n         let arrow = { ...this.state.arrow };\n         arrow.isRender = false;\n         arrow.animationSidesStyle.right = 23;\n         arrow.animationSidesStyle.deg = 45;\n         arrow.animationCenterStyle.right = 0;\n         arrow.animationCenterStyle.deg = 0;\n         this.setState({ arrow });\n         //add scroll handler after arrow removed\n         this.checkArrowRendering();\n         window.addEventListener(\"scroll\", this.scrollHandler);\n      };\n   }\n\n   componentDidMount() {\n      this.checkArrowRendering();\n      window.addEventListener(\"scroll\", this.scrollHandler);\n   }\n   componentWillReceiveProps() {\n      // console.log(this.props)\n      this.setState({ isRender: true });\n   }\n\n   render() {\n      return (\n         <React.Fragment>\n            <Header\n               employeeInfo={this.props.employee.info}\n               projectsList={this.props.employee.projects}\n            />\n            <Main projectsList={this.props.employee.projects} />\n            <Footer />\n            {this.state.arrow.isRender ? (\n               <Arrow\n                  arrowStyle={this.state.arrow.style}\n                  animationSidesStyle={this.state.arrow.animationSidesStyle}\n                  rotatingSidesDeg={this.state.arrow.animationSidesStyle.deg}\n                  animationCenterStyle={this.state.arrow.animationCenterStyle}\n                  rotatingCenterDeg={this.state.arrow.animationCenterStyle.deg}\n                  arrowId=\"ToTop\"\n                  type=\"toTop\"\n                  arrowClickHandler={this.arrowClickHandler}\n               />\n            ) : null}\n         </React.Fragment>\n      );\n   }\n}\n\nexport default RenderEmployee;\n"]},"metadata":{},"sourceType":"module"}